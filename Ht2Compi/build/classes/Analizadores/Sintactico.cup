package Analizadores;

import java_cup.runtime.Symbol;
import ht2compi.*;

//PARSER 
parser code
{://Codigo visible
    
    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
     //   Inicio.lisErrores.add("Error de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1)+" Se esperaba otro token\n");       
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

:}

action code
{://Codigo de usuario
    String tmp="";
:}

//terminales***************

terminal Tkn_igual,Tkn_coma,Tkn_parA,Tkn_parC,Tkn_panel,Tkn_coA,Tkn_coC,Tkn_dibujar;
terminal String Tkn_entero,Tkn_id,Tkn_cadena;


//noterminales********************
nonterminal INICIO, S,SENTENCIADIBUJAR,LISTA,DIBUJAR, CORD;


start with INICIO;

INICIO::=S
;
S::=Tkn_panel Tkn_igual Tkn_coA Tkn_entero:xx Tkn_coma Tkn_entero:yy Tkn_coC{:Principal.setTamano(xx,yy);:}
     SENTENCIADIBUJAR
;
SENTENCIADIBUJAR::=SENTENCIADIBUJAR DIBUJAR
                    |DIBUJAR
;
DIBUJAR::=Tkn_dibujar {:Principal.cordenadas.clear();:}Tkn_igual Tkn_coA LISTA Tkn_id:color{:Principal.ponerColor(color);:} Tkn_coC
;
LISTA::=LISTA CORD 
        |CORD
;
CORD::=Tkn_parA Tkn_entero:xx Tkn_coma Tkn_entero:yy Tkn_parC{:Principal.cordenadas.add(new Cordenadas(xx,yy));:}
        |Tkn_coma
;