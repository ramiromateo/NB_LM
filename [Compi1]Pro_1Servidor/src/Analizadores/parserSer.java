
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sat Sep 22 13:17:26 GMT-12:00 2018
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.Symbol;
import compi1.pro_1servidor.*;
import Objetos.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sat Sep 22 13:17:26 GMT-12:00 2018
  */
public class parserSer extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public parserSer() {super();}

  /** Constructor which sets the default scanner. */
  public parserSer(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parserSer(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\157\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\004\015\000\002\004\014\000\002\021\004" +
    "\000\002\003\013\000\002\003\012\000\002\026\003\000" +
    "\002\026\003\000\002\026\003\000\002\027\002\000\002" +
    "\030\002\000\002\005\014\000\002\031\002\000\002\005" +
    "\013\000\002\032\002\000\002\005\016\000\002\005\014" +
    "\000\002\033\002\000\002\005\010\000\002\034\002\000" +
    "\002\005\016\000\002\005\017\000\002\035\002\000\002" +
    "\005\010\000\002\036\002\000\002\037\002\000\002\005" +
    "\023\000\002\017\004\000\002\017\003\000\002\020\005" +
    "\000\002\020\003\000\002\020\005\000\002\020\005\000" +
    "\002\020\005\000\002\020\005\000\002\020\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\005\000\002\015" +
    "\004\000\002\015\003\000\002\040\002\000\002\016\013" +
    "\000\002\041\002\000\002\016\013\000\002\042\002\000" +
    "\002\016\013\000\002\043\002\000\002\016\013\000\002" +
    "\044\002\000\002\016\013\000\002\045\002\000\002\016" +
    "\013\000\002\046\002\000\002\016\013\000\002\047\002" +
    "\000\002\016\013\000\002\050\002\000\002\016\013\000" +
    "\002\024\003\000\002\024\005\000\002\025\005\000\002" +
    "\025\005\000\002\025\005\000\002\025\005\000\002\025" +
    "\003\000\002\025\005\000\002\025\006\000\002\025\006" +
    "\000\002\013\004\000\002\013\003\000\002\014\005\000" +
    "\002\014\003\000\002\014\005\000\002\014\005\000\002" +
    "\014\005\000\002\014\005\000\002\014\005\000\002\011" +
    "\004\000\002\011\003\000\002\051\002\000\002\012\013" +
    "\000\002\052\002\000\002\012\013\000\002\053\002\000" +
    "\002\012\013\000\002\054\002\000\002\012\013\000\002" +
    "\055\002\000\002\012\013\000\002\056\002\000\002\012" +
    "\013\000\002\057\002\000\002\010\014\000\002\060\002" +
    "\000\002\010\013\000\002\061\002\000\002\010\014\000" +
    "\002\062\002\000\002\010\013\000\002\006\004\000\002" +
    "\006\003\000\002\007\012\000\002\007\012\000\002\007" +
    "\012\000\002\007\012\000\002\007\012\000\002\007\012" +
    "\000\002\007\012" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0198\000\004\006\004\001\002\000\006\007\u018c\045" +
    "\u018b\001\002\000\006\002\000\006\030\001\002\000\006" +
    "\002\uffff\006\011\001\002\000\004\002\010\001\002\000" +
    "\004\002\001\001\002\000\004\045\012\001\002\000\004" +
    "\006\013\001\002\000\004\046\014\001\002\000\004\047" +
    "\015\001\002\000\010\053\016\055\021\056\017\001\002" +
    "\000\004\051\ufff7\001\002\000\004\051\ufff9\001\002\000" +
    "\004\006\024\001\002\000\004\051\ufff8\001\002\000\004" +
    "\051\023\001\002\000\004\006\ufffc\001\002\000\004\045" +
    "\025\001\002\000\004\012\026\001\002\000\004\006\027" +
    "\001\002\000\006\002\ufffe\006\ufffe\001\002\000\004\007" +
    "\031\001\002\000\004\006\032\001\002\000\004\006\033" +
    "\001\002\000\014\011\044\015\041\025\043\055\045\056" +
    "\042\001\002\000\004\006\035\001\002\000\004\007\036" +
    "\001\002\000\004\012\037\001\002\000\004\006\040\001" +
    "\002\000\006\002\ufffb\006\ufffb\001\002\000\004\006\u0163" +
    "\001\002\000\026\004\074\020\u010a\021\071\026\073\027" +
    "\070\030\066\031\075\032\072\033\067\057\077\001\002" +
    "\000\004\020\375\001\002\000\004\006\301\001\002\000" +
    "\022\004\056\005\050\010\057\017\051\020\047\021\053" +
    "\022\052\026\055\001\002\000\022\004\uffb9\005\uffb9\012" +
    "\uffb9\017\uffb9\020\uffb9\021\uffb9\022\uffb9\026\uffb9\001\002" +
    "\000\004\024\205\001\002\000\004\024\203\001\002\000" +
    "\004\024\201\001\002\000\004\024\177\001\002\000\004" +
    "\024\175\001\002\000\022\004\056\005\050\012\170\017" +
    "\051\020\166\021\053\022\052\026\055\001\002\000\022" +
    "\004\uffb7\005\uffb7\012\uffb7\017\uffb7\020\uffb7\021\uffb7\022" +
    "\uffb7\026\uffb7\001\002\000\004\024\164\001\002\000\004" +
    "\024\060\001\002\000\004\052\061\001\002\000\004\006" +
    "\062\001\002\000\004\056\uffe7\001\002\000\004\056\064" +
    "\001\002\000\026\004\074\020\065\021\071\026\073\027" +
    "\070\030\066\031\075\032\072\033\067\057\077\001\002" +
    "\000\004\024\162\001\002\000\004\024\160\001\002\000" +
    "\004\024\156\001\002\000\004\024\154\001\002\000\004" +
    "\024\152\001\002\000\004\024\150\001\002\000\030\004" +
    "\uffe1\012\uffe1\020\uffe1\021\uffe1\026\uffe1\027\uffe1\030\uffe1" +
    "\031\uffe1\032\uffe1\033\uffe1\057\uffe1\001\002\000\004\024" +
    "\146\001\002\000\004\024\144\001\002\000\030\004\074" +
    "\012\133\020\065\021\071\026\073\027\070\030\066\031" +
    "\075\032\072\033\067\057\077\001\002\000\004\024\101" +
    "\001\002\000\030\004\uffe3\012\uffe3\020\uffe3\021\uffe3\026" +
    "\uffe3\027\uffe3\030\uffe3\031\uffe3\032\uffe3\033\uffe3\057\uffe3" +
    "\001\002\000\014\034\107\036\106\043\110\044\102\052" +
    "\105\001\002\000\004\034\130\001\002\000\030\004\uffd9" +
    "\012\uffd9\020\uffd9\021\uffd9\026\uffd9\027\uffd9\030\uffd9\031" +
    "\uffd9\032\uffd9\033\uffd9\057\uffd9\001\002\000\040\004\uffc4" +
    "\006\uffc4\012\116\020\uffc4\021\uffc4\026\uffc4\027\uffc4\030" +
    "\uffc4\031\uffc4\032\uffc4\033\uffc4\040\117\041\114\042\113" +
    "\057\uffc4\001\002\000\044\004\uffbe\006\uffbe\012\uffbe\020" +
    "\uffbe\021\uffbe\026\uffbe\027\uffbe\030\uffbe\031\uffbe\032\uffbe" +
    "\033\uffbe\035\uffbe\037\uffbe\040\uffbe\041\uffbe\042\uffbe\057" +
    "\uffbe\001\002\000\012\034\107\043\110\044\102\052\105" +
    "\001\002\000\012\034\107\043\110\044\102\052\105\001" +
    "\002\000\004\034\111\001\002\000\012\034\107\043\110" +
    "\044\102\052\105\001\002\000\014\012\116\035\115\040" +
    "\117\041\114\042\113\001\002\000\012\034\107\043\110" +
    "\044\102\052\105\001\002\000\012\034\107\043\110\044" +
    "\102\052\105\001\002\000\044\004\uffbb\006\uffbb\012\uffbb" +
    "\020\uffbb\021\uffbb\026\uffbb\027\uffbb\030\uffbb\031\uffbb\032" +
    "\uffbb\033\uffbb\035\uffbb\037\uffbb\040\uffbb\041\uffbb\042\uffbb" +
    "\057\uffbb\001\002\000\012\034\107\043\110\044\102\052" +
    "\105\001\002\000\012\034\107\043\110\044\102\052\105" +
    "\001\002\000\044\004\uffc2\006\uffc2\012\uffc2\020\uffc2\021" +
    "\uffc2\026\uffc2\027\uffc2\030\uffc2\031\uffc2\032\uffc2\033\uffc2" +
    "\035\uffc2\037\uffc2\040\uffc2\041\114\042\113\057\uffc2\001" +
    "\002\000\044\004\uffc1\006\uffc1\012\uffc1\020\uffc1\021\uffc1" +
    "\026\uffc1\027\uffc1\030\uffc1\031\uffc1\032\uffc1\033\uffc1\035" +
    "\uffc1\037\uffc1\040\uffc1\041\114\042\113\057\uffc1\001\002" +
    "\000\044\004\uffc0\006\uffc0\012\uffc0\020\uffc0\021\uffc0\026" +
    "\uffc0\027\uffc0\030\uffc0\031\uffc0\032\uffc0\033\uffc0\035\uffc0" +
    "\037\uffc0\040\uffc0\041\uffc0\042\uffc0\057\uffc0\001\002\000" +
    "\044\004\uffbf\006\uffbf\012\uffbf\020\uffbf\021\uffbf\026\uffbf" +
    "\027\uffbf\030\uffbf\031\uffbf\032\uffbf\033\uffbf\035\uffbf\037" +
    "\uffbf\040\uffbf\041\uffbf\042\uffbf\057\uffbf\001\002\000\014" +
    "\012\116\035\125\040\117\041\114\042\113\001\002\000" +
    "\044\004\uffbd\006\uffbd\012\uffbd\020\uffbd\021\uffbd\026\uffbd" +
    "\027\uffbd\030\uffbd\031\uffbd\032\uffbd\033\uffbd\035\uffbd\037" +
    "\uffbd\040\uffbd\041\uffbd\042\uffbd\057\uffbd\001\002\000\014" +
    "\012\116\037\127\040\117\041\114\042\113\001\002\000" +
    "\032\004\uffc3\006\uffc3\012\uffc3\020\uffc3\021\uffc3\026\uffc3" +
    "\027\uffc3\030\uffc3\031\uffc3\032\uffc3\033\uffc3\057\uffc3\001" +
    "\002\000\012\034\107\043\110\044\102\052\105\001\002" +
    "\000\014\012\116\035\132\040\117\041\114\042\113\001" +
    "\002\000\044\004\uffbc\006\uffbc\012\uffbc\020\uffbc\021\uffbc" +
    "\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032\uffbc\033\uffbc\035" +
    "\uffbc\037\uffbc\040\uffbc\041\uffbc\042\uffbc\057\uffbc\001\002" +
    "\000\004\006\uffe6\001\002\000\030\004\uffe4\012\uffe4\020" +
    "\uffe4\021\uffe4\026\uffe4\027\uffe4\030\uffe4\031\uffe4\032\uffe4" +
    "\033\uffe4\057\uffe4\001\002\000\004\006\136\001\002\000" +
    "\004\006\137\001\002\000\004\006\140\001\002\000\004" +
    "\055\141\001\002\000\004\012\142\001\002\000\004\006" +
    "\143\001\002\000\004\006\uffe5\001\002\000\014\034\107" +
    "\036\106\043\110\044\102\052\105\001\002\000\030\004" +
    "\uffdb\012\uffdb\020\uffdb\021\uffdb\026\uffdb\027\uffdb\030\uffdb" +
    "\031\uffdb\032\uffdb\033\uffdb\057\uffdb\001\002\000\004\054" +
    "\147\001\002\000\030\004\uffdf\012\uffdf\020\uffdf\021\uffdf" +
    "\026\uffdf\027\uffdf\030\uffdf\031\uffdf\032\uffdf\033\uffdf\057" +
    "\uffdf\001\002\000\004\052\151\001\002\000\030\004\uffda" +
    "\012\uffda\020\uffda\021\uffda\026\uffda\027\uffda\030\uffda\031" +
    "\uffda\032\uffda\033\uffda\057\uffda\001\002\000\004\052\153" +
    "\001\002\000\030\004\uffe0\012\uffe0\020\uffe0\021\uffe0\026" +
    "\uffe0\027\uffe0\030\uffe0\031\uffe0\032\uffe0\033\uffe0\057\uffe0" +
    "\001\002\000\014\034\107\036\106\043\110\044\102\052" +
    "\105\001\002\000\030\004\uffde\012\uffde\020\uffde\021\uffde" +
    "\026\uffde\027\uffde\030\uffde\031\uffde\032\uffde\033\uffde\057" +
    "\uffde\001\002\000\004\054\157\001\002\000\030\004\uffdc" +
    "\012\uffdc\020\uffdc\021\uffdc\026\uffdc\027\uffdc\030\uffdc\031" +
    "\uffdc\032\uffdc\033\uffdc\057\uffdc\001\002\000\004\054\161" +
    "\001\002\000\030\004\uffdd\012\uffdd\020\uffdd\021\uffdd\026" +
    "\uffdd\027\uffdd\030\uffdd\031\uffdd\032\uffdd\033\uffdd\057\uffdd" +
    "\001\002\000\004\054\163\001\002\000\030\004\uffe2\012" +
    "\uffe2\020\uffe2\021\uffe2\026\uffe2\027\uffe2\030\uffe2\031\uffe2" +
    "\032\uffe2\033\uffe2\057\uffe2\001\002\000\004\054\165\001" +
    "\002\000\022\004\uffb4\005\uffb4\012\uffb4\017\uffb4\020\uffb4" +
    "\021\uffb4\022\uffb4\026\uffb4\001\002\000\004\024\173\001" +
    "\002\000\022\004\uffba\005\uffba\012\uffba\017\uffba\020\uffba" +
    "\021\uffba\022\uffba\026\uffba\001\002\000\004\006\uffee\001" +
    "\002\000\004\006\172\001\002\000\004\006\uffed\001\002" +
    "\000\004\054\174\001\002\000\022\004\uffb8\005\uffb8\012" +
    "\uffb8\017\uffb8\020\uffb8\021\uffb8\022\uffb8\026\uffb8\001\002" +
    "\000\004\052\176\001\002\000\022\004\uffb6\005\uffb6\012" +
    "\uffb6\017\uffb6\020\uffb6\021\uffb6\022\uffb6\026\uffb6\001\002" +
    "\000\004\052\200\001\002\000\022\004\uffb5\005\uffb5\012" +
    "\uffb5\017\uffb5\020\uffb5\021\uffb5\022\uffb5\026\uffb5\001\002" +
    "\000\004\054\202\001\002\000\022\004\uffb3\005\uffb3\012" +
    "\uffb3\017\uffb3\020\uffb3\021\uffb3\022\uffb3\026\uffb3\001\002" +
    "\000\004\052\204\001\002\000\022\004\uffb2\005\uffb2\012" +
    "\uffb2\017\uffb2\020\uffb2\021\uffb2\022\uffb2\026\uffb2\001\002" +
    "\000\004\054\206\001\002\000\024\004\uffb8\005\uffb8\006" +
    "\207\012\uffb8\017\uffb8\020\uffb8\021\uffb8\022\uffb8\026\uffb8" +
    "\001\002\000\004\006\210\001\002\000\016\004\221\005" +
    "\216\017\220\021\217\022\223\023\222\001\002\000\004" +
    "\006\213\001\002\000\004\006\uffb0\001\002\000\020\004" +
    "\221\005\216\017\220\021\217\022\223\023\222\055\ufff1" +
    "\001\002\000\004\006\uffb1\001\002\000\004\055\276\001" +
    "\002\000\004\006\267\001\002\000\004\006\260\001\002" +
    "\000\004\006\251\001\002\000\004\006\242\001\002\000" +
    "\004\006\233\001\002\000\004\006\224\001\002\000\004" +
    "\052\225\001\002\000\004\006\uffad\001\002\000\004\006" +
    "\227\001\002\000\004\022\230\001\002\000\004\012\231" +
    "\001\002\000\004\006\232\001\002\000\004\006\uffac\001" +
    "\002\000\004\054\234\001\002\000\004\006\uffa5\001\002" +
    "\000\004\006\236\001\002\000\004\023\237\001\002\000" +
    "\004\012\240\001\002\000\004\006\241\001\002\000\004" +
    "\006\uffa4\001\002\000\004\054\243\001\002\000\004\006" +
    "\uffab\001\002\000\004\006\245\001\002\000\004\004\246" +
    "\001\002\000\004\012\247\001\002\000\004\006\250\001" +
    "\002\000\004\006\uffaa\001\002\000\004\054\252\001\002" +
    "\000\004\006\uffa9\001\002\000\004\006\254\001\002\000" +
    "\004\017\255\001\002\000\004\012\256\001\002\000\004" +
    "\006\257\001\002\000\004\006\uffa8\001\002\000\004\052" +
    "\261\001\002\000\004\006\uffaf\001\002\000\004\006\263" +
    "\001\002\000\004\021\264\001\002\000\004\012\265\001" +
    "\002\000\004\006\266\001\002\000\004\006\uffae\001\002" +
    "\000\004\052\270\001\002\000\004\006\uffa7\001\002\000" +
    "\004\006\272\001\002\000\004\005\273\001\002\000\004" +
    "\012\274\001\002\000\004\006\275\001\002\000\004\006" +
    "\uffa6\001\002\000\004\012\277\001\002\000\004\006\300" +
    "\001\002\000\004\006\ufff0\001\002\000\004\006\ufff6\001" +
    "\002\000\004\006\303\001\002\000\020\004\311\005\312" +
    "\010\317\013\316\014\315\016\313\017\310\001\002\000" +
    "\004\006\306\001\002\000\004\006\uff9a\001\002\000\022" +
    "\004\311\005\312\010\317\011\ufff5\013\316\014\315\016" +
    "\313\017\310\001\002\000\004\006\uff9b\001\002\000\004" +
    "\006\367\001\002\000\004\006\361\001\002\000\004\006" +
    "\353\001\002\000\004\006\345\001\002\000\004\011\342" +
    "\001\002\000\004\006\334\001\002\000\004\006\326\001" +
    "\002\000\004\006\320\001\002\000\004\052\321\001\002" +
    "\000\004\006\322\001\002\000\004\010\323\001\002\000" +
    "\004\012\324\001\002\000\004\006\325\001\002\000\004" +
    "\006\uff99\001\002\000\004\054\327\001\002\000\004\006" +
    "\330\001\002\000\004\013\331\001\002\000\004\012\332" +
    "\001\002\000\004\006\333\001\002\000\004\006\uff97\001" +
    "\002\000\004\053\335\001\002\000\004\006\336\001\002" +
    "\000\004\014\337\001\002\000\004\012\340\001\002\000" +
    "\004\006\341\001\002\000\004\006\uff96\001\002\000\004" +
    "\012\343\001\002\000\004\006\344\001\002\000\004\006" +
    "\ufff4\001\002\000\004\053\346\001\002\000\004\006\347" +
    "\001\002\000\004\016\350\001\002\000\004\012\351\001" +
    "\002\000\004\006\352\001\002\000\004\006\uff94\001\002" +
    "\000\004\052\354\001\002\000\004\006\355\001\002\000" +
    "\004\005\356\001\002\000\004\012\357\001\002\000\004" +
    "\006\360\001\002\000\004\006\uff95\001\002\000\004\054" +
    "\362\001\002\000\004\006\363\001\002\000\004\004\364" +
    "\001\002\000\004\012\365\001\002\000\004\006\366\001" +
    "\002\000\004\006\uff98\001\002\000\004\054\370\001\002" +
    "\000\004\006\371\001\002\000\004\017\372\001\002\000" +
    "\004\012\373\001\002\000\004\006\374\001\002\000\004" +
    "\006\uff93\001\002\000\004\024\376\001\002\000\004\054" +
    "\377\001\002\000\004\022\u0100\001\002\000\004\024\u0101" +
    "\001\002\000\004\052\u0102\001\002\000\006\012\u0104\032" +
    "\u0103\001\002\000\004\024\u0106\001\002\000\004\006\u0105" +
    "\001\002\000\004\006\uffef\001\002\000\004\052\u0107\001" +
    "\002\000\004\012\u0108\001\002\000\004\006\u0109\001\002" +
    "\000\004\006\uffea\001\002\000\004\024\u010f\001\002\000" +
    "\030\004\074\012\u010c\020\065\021\071\026\073\027\070" +
    "\030\066\031\075\032\072\033\067\057\077\001\002\000" +
    "\004\006\uffe9\001\002\000\004\006\u010e\001\002\000\004" +
    "\006\uffe8\001\002\000\004\054\u0110\001\002\000\032\004" +
    "\uffe2\006\u0111\012\uffe2\020\uffe2\021\uffe2\026\uffe2\027\uffe2" +
    "\030\uffe2\031\uffe2\032\uffe2\033\uffe2\057\uffe2\001\002\000" +
    "\004\006\u0112\001\002\000\024\004\u011d\021\u011b\023\u011e" +
    "\027\u011a\030\u0118\031\u011f\032\u011c\033\u0119\057\u0120\001" +
    "\002\000\004\006\u0115\001\002\000\004\006\uffd7\001\002" +
    "\000\026\004\u011d\021\u011b\023\u011e\027\u011a\030\u0118\031" +
    "\u011f\032\u011c\033\u0119\056\uffec\057\u0120\001\002\000\004" +
    "\006\uffd8\001\002\000\004\056\u0160\001\002\000\004\006" +
    "\u0159\001\002\000\004\006\u0152\001\002\000\004\006\u014b" +
    "\001\002\000\004\006\u0144\001\002\000\004\006\u013d\001" +
    "\002\000\004\006\u0136\001\002\000\004\006\u012f\001\002" +
    "\000\004\006\u0128\001\002\000\004\006\u0121\001\002\000" +
    "\014\034\107\036\106\043\110\044\102\052\105\001\002" +
    "\000\004\006\uffc6\001\002\000\004\006\u0124\001\002\000" +
    "\004\057\u0125\001\002\000\004\012\u0126\001\002\000\004" +
    "\006\u0127\001\002\000\004\006\uffc5\001\002\000\014\034" +
    "\107\036\106\043\110\044\102\052\105\001\002\000\004" +
    "\006\uffcc\001\002\000\004\006\u012b\001\002\000\004\031" +
    "\u012c\001\002\000\004\012\u012d\001\002\000\004\006\u012e" +
    "\001\002\000\004\006\uffcb\001\002\000\004\054\u0130\001" +
    "\002\000\004\006\uffca\001\002\000\004\006\u0132\001\002" +
    "\000\004\023\u0133\001\002\000\004\012\u0134\001\002\000" +
    "\004\006\u0135\001\002\000\004\006\uffc9\001\002\000\004" +
    "\054\u0137\001\002\000\004\006\uffd4\001\002\000\004\006" +
    "\u0139\001\002\000\004\004\u013a\001\002\000\004\012\u013b" +
    "\001\002\000\004\006\u013c\001\002\000\004\006\uffd3\001" +
    "\002\000\004\052\u013e\001\002\000\004\006\uffc8\001\002" +
    "\000\004\006\u0140\001\002\000\004\032\u0141\001\002\000" +
    "\004\012\u0142\001\002\000\004\006\u0143\001\002\000\004" +
    "\006\uffc7\001\002\000\004\052\u0145\001\002\000\004\006" +
    "\uffd6\001\002\000\004\006\u0147\001\002\000\004\021\u0148" +
    "\001\002\000\004\012\u0149\001\002\000\004\006\u014a\001" +
    "\002\000\004\006\uffd5\001\002\000\014\034\107\036\106" +
    "\043\110\044\102\052\105\001\002\000\004\006\uffd2\001" +
    "\002\000\004\006\u014e\001\002\000\004\027\u014f\001\002" +
    "\000\004\012\u0150\001\002\000\004\006\u0151\001\002\000" +
    "\004\006\uffd1\001\002\000\004\054\u0153\001\002\000\004" +
    "\006\uffce\001\002\000\004\006\u0155\001\002\000\004\033" +
    "\u0156\001\002\000\004\012\u0157\001\002\000\004\006\u0158" +
    "\001\002\000\004\006\uffcd\001\002\000\004\054\u015a\001" +
    "\002\000\004\006\uffd0\001\002\000\004\006\u015c\001\002" +
    "\000\004\030\u015d\001\002\000\004\012\u015e\001\002\000" +
    "\004\006\u015f\001\002\000\004\006\uffcf\001\002\000\004" +
    "\012\u0161\001\002\000\004\006\u0162\001\002\000\004\006" +
    "\uffeb\001\002\000\004\006\u0164\001\002\000\006\010\u017c" +
    "\014\u017b\001\002\000\004\006\u0166\001\002\000\010\010" +
    "\u0169\014\u0168\015\ufff3\001\002\000\004\015\u0178\001\002" +
    "\000\004\006\u0171\001\002\000\004\006\u016a\001\002\000" +
    "\004\052\u016b\001\002\000\004\006\uffa3\001\002\000\004" +
    "\006\u016d\001\002\000\004\010\u016e\001\002\000\004\012" +
    "\u016f\001\002\000\004\006\u0170\001\002\000\004\006\uffa2" +
    "\001\002\000\004\053\u0172\001\002\000\004\006\uff9f\001" +
    "\002\000\004\006\u0174\001\002\000\004\014\u0175\001\002" +
    "\000\004\012\u0176\001\002\000\004\006\u0177\001\002\000" +
    "\004\006\uff9e\001\002\000\004\012\u0179\001\002\000\004" +
    "\006\u017a\001\002\000\004\006\ufff2\001\002\000\004\006" +
    "\u0184\001\002\000\004\006\u017d\001\002\000\004\052\u017e" +
    "\001\002\000\004\006\uffa1\001\002\000\004\006\u0180\001" +
    "\002\000\004\010\u0181\001\002\000\004\012\u0182\001\002" +
    "\000\004\006\u0183\001\002\000\004\006\uffa0\001\002\000" +
    "\004\053\u0185\001\002\000\004\006\uff9d\001\002\000\004" +
    "\006\u0187\001\002\000\004\014\u0188\001\002\000\004\012" +
    "\u0189\001\002\000\004\006\u018a\001\002\000\004\006\uff9c" +
    "\001\002\000\004\006\u0193\001\002\000\004\006\u018d\001" +
    "\002\000\004\006\033\001\002\000\004\006\u018f\001\002" +
    "\000\004\007\u0190\001\002\000\004\012\u0191\001\002\000" +
    "\004\006\u0192\001\002\000\006\002\ufffa\006\ufffa\001\002" +
    "\000\004\046\u0194\001\002\000\004\047\u0195\001\002\000" +
    "\010\053\016\055\021\056\017\001\002\000\004\006\u0197" +
    "\001\002\000\004\045\u0198\001\002\000\004\012\u0199\001" +
    "\002\000\004\006\u019a\001\002\000\006\002\ufffd\006\ufffd" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0198\000\010\002\006\003\004\004\005\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\021\017" +
    "\026\021\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\033\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\017\u010a\020" +
    "\077\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\013\053\014\045\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\014\166\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\036\062\001\001\000\002\001" +
    "\001\000\006\017\075\020\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\133\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\024\102\025\103" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\125\001\001\000\004" +
    "\025\123\001\001\000\002\001\001\000\004\025\111\001" +
    "\001\000\002\001\001\000\004\025\122\001\001\000\004" +
    "\025\121\001\001\000\002\001\001\000\004\025\120\001" +
    "\001\000\004\025\117\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\130\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\134\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\024\144\025\103\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\024" +
    "\154\025\103\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\170\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\011\210\012\211" +
    "\001\001\000\002\001\001\000\004\012\213\001\001\000" +
    "\002\001\001\000\004\032\214\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\052\225\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\056" +
    "\234\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\053\243\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\054\252\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\051\261" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\055\270\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\301\001\001\000\006\006\303\007\304\001\001" +
    "\000\002\001\001\000\004\007\306\001\001\000\002\001" +
    "\001\000\004\030\313\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\133\001\001\000" +
    "\004\035\u010c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\015\u0112\016" +
    "\u0113\001\001\000\002\001\001\000\004\016\u0115\001\001" +
    "\000\002\001\001\000\004\034\u0116\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\024\u0121\025\103\001\001\000\004\050" +
    "\u0122\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\024" +
    "\u0128\025\103\001\001\000\004\045\u0129\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\u0130" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\041\u0137\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\u013e\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\040\u0145\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\024\u014b\025" +
    "\103\001\001\000\004\042\u014c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\044\u0153\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\043\u015a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\u0164\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\031\u0166\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\057\u016b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\061\u0172\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\060\u017e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\062\u0185\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u018d\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\021\u0195\026\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parserSer$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parserSer$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parserSer$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


//Codigo visible
    
    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
     //   Inicio.lisErrores.add("Error de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1)+" Se esperaba otro token\n");       
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$parserSer$actions {

//Codigo de usuario
    String tmp="";

  private final parserSer parser;

  /** Constructor */
  CUP$parserSer$actions(parserSer parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$parserSer$do_action(
    int                        CUP$parserSer$act_num,
    java_cup.runtime.lr_parser CUP$parserSer$parser,
    java.util.Stack            CUP$parserSer$stack,
    int                        CUP$parserSer$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parserSer$result;

      /* select the action based on the action number */
      switch (CUP$parserSer$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_direccion Tkn_dolar Tkn_cadena Tkn_dolar Tkn_direccion Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setDireccion(valu);
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_email Tkn_dolar Tkn_id Tkn_dolar Tkn_email Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setCorreo(valu);
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_telefono Tkn_dolar Tkn_entero Tkn_dolar Tkn_telefono Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setTelefono(Integer.parseInt(valu));
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_password Tkn_dolar Tkn_id Tkn_dolar Tkn_password Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                   
                                    ConsoleServer.usuarios.getLast().setPassword(valu);
        
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_apellido Tkn_dolar Tkn_cadena Tkn_dolar Tkn_apellido Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setApellido(valu);
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_nombre Tkn_dolar Tkn_cadena Tkn_dolar Tkn_nombre Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setName(valu);
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // ATRUBUTOSUSER ::= Tkn_dolar Tkn_ide Tkn_dolar Tkn_entero Tkn_dolar Tkn_ide Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		
                                    ConsoleServer.usuarios.getLast().setId(Integer.parseInt(valu));
                              
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRUBUTOSUSER",5, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // SENTENCIAINTERIORCREARUSER ::= ATRUBUTOSUSER 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORCREARUSER",4, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // SENTENCIAINTERIORCREARUSER ::= SENTENCIAINTERIORCREARUSER ATRUBUTOSUSER 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORCREARUSER",4, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // SENTENCIAINICIOUSER ::= Tkn_dolar Tkn_password Tkn_dolar Tkn_id NT$27 Tkn_dolar Tkn_password Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$27
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINICIOUSER",6, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // NT$27 ::= 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
RegistroEstatico.pass=valu;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$27",48, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // SENTENCIAINICIOUSER ::= SENTENCIAINICIOUSER Tkn_dolar Tkn_password Tkn_dolar Tkn_id NT$26 Tkn_dolar Tkn_password Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$26
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINICIOUSER",6, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-9)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // NT$26 ::= 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
RegistroEstatico.pass=valu;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$26",47, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // SENTENCIAINICIOUSER ::= Tkn_dolar Tkn_ide Tkn_dolar Tkn_entero NT$25 Tkn_dolar Tkn_ide Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$25
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINICIOUSER",6, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // NT$25 ::= 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
RegistroEstatico.id=valu; 
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$25",46, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // SENTENCIAINICIOUSER ::= SENTENCIAINICIOUSER Tkn_dolar Tkn_ide Tkn_dolar Tkn_entero NT$24 Tkn_dolar Tkn_ide Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$24
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINICIOUSER",6, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-9)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // NT$24 ::= 
            {
              Object RESULT =null;
		int valuleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valuright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String valu = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
RegistroEstatico.id=valu; 
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$24",45, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_img Tkn_dolar Tkn_cadena NT$23 Tkn_dolar Tkn_img Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$23
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int pathimgleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int pathimgright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String pathimg = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // NT$23 ::= 
            {
              Object RESULT =null;
		int pathimgleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int pathimgright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String pathimg = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[5]=pathimg;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$23",44, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_telefono Tkn_dolar Tkn_entero NT$22 Tkn_dolar Tkn_telefono Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$22
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int telleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int telright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String tel = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // NT$22 ::= 
            {
              Object RESULT =null;
		int telleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int telright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String tel = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[4]=tel;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$22",43, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_direccion Tkn_dolar Tkn_cadena NT$21 Tkn_dolar Tkn_direccion Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$21
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int direleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int direright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String dire = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // NT$21 ::= 
            {
              Object RESULT =null;
		int direleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int direright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String dire = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[3]=dire;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$21",42, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_nombre Tkn_dolar Tkn_cadena NT$20 Tkn_dolar Tkn_nombre Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$20
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NT$20 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[2]=nom;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$20",41, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_propietario Tkn_dolar Tkn_entero NT$19 Tkn_dolar Tkn_propietario Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$19
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int propieleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int propieright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String propie = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // NT$19 ::= 
            {
              Object RESULT =null;
		int propieleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int propieright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String propie = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[1]=propie;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$19",40, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ATRIBUTOTIENDA ::= Tkn_dolar Tkn_codigo Tkn_dolar Tkn_entero NT$18 Tkn_dolar Tkn_codigo Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$18
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int codileft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int codiright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String codi = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOTIENDA",8, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // NT$18 ::= 
            {
              Object RESULT =null;
		int codileft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int codiright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String codi = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arr[0]=codi;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$18",39, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // SENTENCIACREARTIENDA ::= ATRIBUTOTIENDA 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIACREARTIENDA",7, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // SENTENCIACREARTIENDA ::= SENTENCIACREARTIENDA ATRIBUTOTIENDA 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIACREARTIENDA",7, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ATRIBUTOMODIFICAR ::= Tkn_telefono Tkn_igual Tkn_entero 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[4]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ATRIBUTOMODIFICAR ::= Tkn_direccion Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[3]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ATRIBUTOMODIFICAR ::= Tkn_nombre Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[2]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ATRIBUTOMODIFICAR ::= Tkn_propietario Tkn_igual Tkn_entero 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[1]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ATRIBUTOMODIFICAR ::= Tkn_codigo Tkn_igual Tkn_entero 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[0]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ATRIBUTOMODIFICAR ::= Tkn_coma 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ATRIBUTOMODIFICAR ::= Tkn_tipo Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arr[5]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICAR",10, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // MODIFICARTIENDA ::= ATRIBUTOMODIFICAR 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("MODIFICARTIENDA",9, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // MODIFICARTIENDA ::= MODIFICARTIENDA ATRIBUTOMODIFICAR 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("MODIFICARTIENDA",9, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // OPER ::= Tkn_Rq Tkn_parA OPER Tkn_parC 
            {
              String RESULT =null;
		int otleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int otright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String ot = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		RESULT=""+Math.sqrt(Double.parseDouble(ot));
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // OPER ::= Tkn_Ptn Tkn_parA OPER Tkn_parC 
            {
              String RESULT =null;
		int otleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int otright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String ot = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		RESULT=""+Math.pow(Double.parseDouble(ot), 2);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // OPER ::= Tkn_parA OPER Tkn_parC 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		RESULT=a;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // OPER ::= Tkn_entero 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=a;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // OPER ::= OPER Tkn_div OPER 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=""+(Float.parseFloat(a)/Float.parseFloat(b));
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // OPER ::= OPER Tkn_por OPER 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=""+(Float.parseFloat(a)*Float.parseFloat(b));
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // OPER ::= OPER Tkn_menos OPER 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=""+(Float.parseFloat(a)-Float.parseFloat(b));
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // OPER ::= OPER Tkn_mas OPER 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int bright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=""+(Float.parseFloat(a)+Float.parseFloat(b));
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPER",19, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // OPERACIONES ::= Tkn_llaA OPER Tkn_llaC 
            {
              String RESULT =null;
		int soleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int soright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String so = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		RESULT=so;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPERACIONES",18, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // OPERACIONES ::= OPER 
            {
              String RESULT =null;
		int soleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int soright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String so = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=so;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("OPERACIONES",18, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_precio Tkn_dolar OPERACIONES NT$17 Tkn_dolar Tkn_precio Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$17
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // NT$17 ::= 
            {
              Object RESULT =null;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[8]=resul;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$17",38, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_sucursal Tkn_dolar Tkn_entero NT$16 Tkn_dolar Tkn_sucursal Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$16
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int telleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int telright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String tel = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // NT$16 ::= 
            {
              Object RESULT =null;
		int telleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int telright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String tel = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[7]=tel;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$16",37, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_img Tkn_dolar Tkn_cadena NT$15 Tkn_dolar Tkn_img Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$15
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int pathimgleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int pathimgright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String pathimg = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // NT$15 ::= 
            {
              Object RESULT =null;
		int pathimgleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int pathimgright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String pathimg = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[6]=pathimg;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$15",36, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_tamaño Tkn_dolar OPERACIONES NT$14 Tkn_dolar Tkn_tamaño Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$14
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // NT$14 ::= 
            {
              Object RESULT =null;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[5]=resul;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$14",35, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_color Tkn_dolar Tkn_cadena NT$13 Tkn_dolar Tkn_color Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$13
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int direleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int direright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String dire = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // NT$13 ::= 
            {
              Object RESULT =null;
		int direleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int direright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String dire = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[4]=dire;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$13",34, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_marca Tkn_dolar Tkn_cadena NT$12 Tkn_dolar Tkn_marca Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$12
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$12 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[3]=nom;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$12",33, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_cantidad Tkn_dolar OPERACIONES NT$11 Tkn_dolar Tkn_cantidad Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$11
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // NT$11 ::= 
            {
              Object RESULT =null;
		int resulleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int resulright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String resul = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[2]=resul;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$11",32, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_nombre Tkn_dolar Tkn_cadena NT$10 Tkn_dolar Tkn_nombre Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$10
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$10 ::= 
            {
              Object RESULT =null;
		int nomleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int nomright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String nom = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[1]=nom;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$10",31, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ATRIBUTOPRODUCTO ::= Tkn_dolar Tkn_codigo Tkn_dolar Tkn_entero NT$9 Tkn_dolar Tkn_codigo Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-4)).value;
		int codileft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int codiright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String codi = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOPRODUCTO",12, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$9 ::= 
            {
              Object RESULT =null;
		int codileft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int codiright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String codi = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
ConsoleServer.arrP[0]=codi;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$9",30, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // SENTENCIACREARPRODUCTO ::= ATRIBUTOPRODUCTO 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIACREARPRODUCTO",11, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // SENTENCIACREARPRODUCTO ::= SENTENCIACREARPRODUCTO ATRIBUTOPRODUCTO 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIACREARPRODUCTO",11, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_precio Tkn_igual OPERACIONES 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[8]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_sucursal Tkn_igual Tkn_entero 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[7]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_tamaño Tkn_igual OPERACIONES 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[5]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_color Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[4]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_marca Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[3]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_cantidad Tkn_igual OPERACIONES 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[2]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_nombre Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[1]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_codigo Tkn_igual Tkn_entero 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[0]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_coma 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ATRIBUTOMODIFICARPRODUCTO ::= Tkn_tipo Tkn_igual Tkn_cadena 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		ConsoleServer.arrP[6]=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("ATRIBUTOMODIFICARPRODUCTO",14, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // MODIFICARPRODUCTO ::= ATRIBUTOMODIFICARPRODUCTO 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("MODIFICARPRODUCTO",13, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // MODIFICARPRODUCTO ::= MODIFICARPRODUCTO ATRIBUTOMODIFICARPRODUCTO 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("MODIFICARPRODUCTO",13, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_tienda Tkn_ide Tkn_igual Tkn_entero Tkn_dolar NT$7 Tkn_producto MODIFICARPRODUCTO Tkn_menos NT$8 Tkn_dolar Tkn_dolar Tkn_dolar Tkn_tienda Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$8
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-6)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-12)).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-12)).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-12)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-16)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // NT$8 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;
		int entleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)).value;
RegistroEstatico.CrearModificarProducto(ConsoleServer.arrP[6]);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$8",29, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // NT$7 ::= 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
ConsoleServer.arrP[7]=ent;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$7",28, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_producto MODIFICARPRODUCTO Tkn_menos NT$6 Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$6
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // NT$6 ::= 
            {
              Object RESULT =null;
RegistroEstatico.CrearModificarProducto(ConsoleServer.arrP[6]);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$6",27, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_get Tkn_tipo Tkn_igual Tkn_cadena Tkn_propietario Tkn_igual Tkn_entero Tkn_sucursal Tkn_igual Tkn_entero Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int idproleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int idproright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String idpro = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		RegistroEstatico.MandarProductos(idpro);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-12)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_producto Tkn_tipo Tkn_igual Tkn_cadena Tkn_dolar SENTENCIACREARPRODUCTO Tkn_dolar NT$5 Tkn_producto Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;
		int accionleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).left;
		int accionright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).right;
		String accion = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-11)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$5 ::= 
            {
              Object RESULT =null;
		int accionleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).left;
		int accionright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).right;
		String accion = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;

                                                                                                                                        ConsoleServer.arrP[8]="10";
                                                                                                                                        RegistroEstatico.CrearModificarProducto(accion);
                                                                                                                                  
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$5",26, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_tienda MODIFICARTIENDA Tkn_menos NT$4 Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$4
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-5)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$4 ::= 
            {
              Object RESULT =null;
RegistroEstatico.CrearModificarTienda(ConsoleServer.arr[5]);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$4",25, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_get Tkn_tipo Tkn_igual Tkn_cadena Tkn_propietario Tkn_igual Tkn_entero Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
		int idproleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).left;
		int idproright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).right;
		String idpro = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;
		RegistroEstatico.MandarTiendas(idpro);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-9)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_tienda Tkn_tipo Tkn_igual Tkn_cadena Tkn_dolar SENTENCIACREARTIENDA Tkn_dolar NT$3 Tkn_tienda Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;
		int accionleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).left;
		int accionright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).right;
		String accion = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-11)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NT$3 ::= 
            {
              Object RESULT =null;
		int accionleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).left;
		int accionright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).right;
		String accion = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;

                                                                                                                                    RegistroEstatico.CrearModificarTienda(accion);
                                                                                                                                  
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$3",24, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_inicioUsuario Tkn_dolar SENTENCIAINICIOUSER Tkn_dolar NT$2 Tkn_inicioUsuario Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NT$2 ::= 
            {
              Object RESULT =null;
RegistroEstatico.comprobarLogin();
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$2",23, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SENTENCIAINTERIORREQUEST ::= Tkn_dolar Tkn_crearUsuario Tkn_dolar NT$0 SENTENCIAINTERIORCREARUSER Tkn_dolar NT$1 Tkn_crearUsuario Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-3)).value;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAINTERIORREQUEST",3, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-9)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-2)).value;

                                                                                                RegistroEstatico.comprobarExisteciaUser();
                                                                                                
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$1",22, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NT$0 ::= 
            {
              Object RESULT =null;

                                                                    ConsoleServer.usuarios.add(new Usuario());
                                                                
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("NT$0",21, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // VALU ::= Tkn_id 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("VALU",20, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // VALU ::= Tkn_tienda 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("VALU",20, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // VALU ::= Tkn_producto 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.peek()).value;
		RESULT=val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("VALU",20, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // S ::= Tkn_dolar Tkn_request Tkn_dolar SENTENCIAINTERIORREQUEST Tkn_dolar Tkn_request Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("S",1, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-7)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // S ::= S Tkn_dolar Tkn_request Tkn_dolar SENTENCIAINTERIORREQUEST Tkn_dolar Tkn_request Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("S",1, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-8)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // SENTENCIAQUERY ::= VALU Tkn_puntocoma 
            {
              Object RESULT =null;
		int consleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int consright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		String cons = (String)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		ConsoleServer.ResultadoConsulta(cons);
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SENTENCIAQUERY",15, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // SS ::= Tkn_dolar Tkn_query Tkn_dolar Tkn_extraer Tkn_de SENTENCIAQUERY Tkn_dolar Tkn_query Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SS",2, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-9)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // SS ::= SS Tkn_dolar Tkn_query Tkn_dolar Tkn_extraer Tkn_de SENTENCIAQUERY Tkn_dolar Tkn_query Tkn_menos Tkn_dolar 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("SS",2, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-10)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= SS 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= S 
            {
              Object RESULT =null;

              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          return CUP$parserSer$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)).value;
		RESULT = start_val;
              CUP$parserSer$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parserSer$stack.elementAt(CUP$parserSer$top-1)), ((java_cup.runtime.Symbol)CUP$parserSer$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parserSer$parser.done_parsing();
          return CUP$parserSer$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

